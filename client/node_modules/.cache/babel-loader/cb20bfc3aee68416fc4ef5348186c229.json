{"ast":null,"code":"var _jsxFileName = \"/Users/saif/nodeCrud/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from \"react-redux\";\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(createPost(postData));\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: [/*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.buttonSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          size: \"large\",\n          type: \"submit\",\n          fullWidth: true,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"small\",\n          onClick: clear,\n          fullWidth: true,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"78ogLhvABjTYpG0bUiOMUV8K2NY=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/saif/nodeCrud/client/src/components/Form/Form.js"],"names":["React","useState","TextField","Button","Typography","Paper","FileBase","useDispatch","useStyles","Form","postData","setPostData","creator","title","message","tags","selectedFile","classes","dispatch","handleSubmit","e","preventDefault","createPost","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from 'react-file-base64';\nimport { useDispatch } from \"react-redux\";\nimport useStyles from './styles';\n\nconst Form = () => {\n    const [postData, setPostData] = useState({\n       creator: '',\n       title: '',\n       message: '',\n       tags: '',\n       selectedFile: ''\n    });\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(createPost(postData));\n    }\n    const clear = () => {\n\n    }\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">Creating a Memory</Typography>\n                <TextField\n                    name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({\n                        ... postData,\n                        creator: e.target.value\n                    })}\n                />\n                <TextField\n                    name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({\n                    ... postData,\n                    title: e.target.value\n                })}\n                />\n                <TextField\n                    name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({\n                    ... postData,\n                    message: e.target.value\n                })}\n                />\n                <TextField\n                    name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({\n                    ... postData,\n                    tags: e.target.value\n                })}\n                />\n                <div className={classes.fileInput}>\n                    <FileBase type=\"file\" multiple={false} onDone={({base64})=> setPostData({ ...postData, selectedFile: base64 })}\n                    />\n                    <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>\n                        Submit\n                    </Button>\n                    <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>\n                        Clear\n                    </Button>\n                </div>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}